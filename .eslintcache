[{"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/index.js":"1","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/App.js":"2","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/context/context.js":"3","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/context/contextReducer.js":"4","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/styles.js":"5","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/index.js":"6","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/InfoCard.jsx":"7","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Snackbar/Snackbar.jsx":"8","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Main.jsx":"9","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/styles.js":"10","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Snackbar/styles.js":"11","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/List/List.jsx":"12","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Form/Form.jsx":"13","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Form/styles.js":"14","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/constants/categories.js":"15","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/List/styles.js":"16","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Details/Details.jsx":"17","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Details/styles.js":"18","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/useTransactions.js":"19","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/utils/formatDate.js":"20"},{"size":414,"mtime":1661407238007,"results":"21","hashOfConfig":"22"},{"size":1453,"mtime":1661425657720,"results":"23","hashOfConfig":"22"},{"size":2259,"mtime":1661425613040,"results":"24","hashOfConfig":"22"},{"size":579,"mtime":1661425629994,"results":"25","hashOfConfig":"22"},{"size":552,"mtime":1661407249838,"results":"26","hashOfConfig":"22"},{"size":212,"mtime":1661425319599,"results":"27","hashOfConfig":"22"},{"size":439,"mtime":1661425327061,"results":"28","hashOfConfig":"22"},{"size":861,"mtime":1661425304561,"results":"29","hashOfConfig":"22"},{"size":1297,"mtime":1661425026300,"results":"30","hashOfConfig":"22"},{"size":490,"mtime":1661425038357,"results":"31","hashOfConfig":"22"},{"size":196,"mtime":1661425079702,"results":"32","hashOfConfig":"22"},{"size":1654,"mtime":1661424464601,"results":"33","hashOfConfig":"22"},{"size":5415,"mtime":1662098846241,"results":"34","hashOfConfig":"22"},{"size":235,"mtime":1662098683539,"results":"35","hashOfConfig":"22"},{"size":1710,"mtime":1661425358787,"results":"36","hashOfConfig":"22"},{"size":399,"mtime":1662098324001,"results":"37","hashOfConfig":"22"},{"size":702,"mtime":1661407469619,"results":"38","hashOfConfig":"22"},{"size":237,"mtime":1661407478595,"results":"39","hashOfConfig":"22"},{"size":1131,"mtime":1661407392737,"results":"40","hashOfConfig":"22"},{"size":302,"mtime":1662098448315,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xh5fgr",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/index.js",[],["86","87"],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/App.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/context/context.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/context/contextReducer.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/index.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/InfoCard.jsx",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Snackbar/Snackbar.jsx",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Main.jsx",["88","89","90"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n} from \"@material-ui/core\";\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport { ExpenseTrackerContext } from \"../../context/context\";\nimport useStyles from \"./styles\";\nimport Form from \"./Form/Form\";\nimport List from \"./List/List\";\nimport InfoCard from \"../InfoCard\";\n\nconst ExpenseTracker = () => {\n  const classes = useStyles();\n  const { balance } = useContext(ExpenseTrackerContext);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">\n          Total Balance ${balance}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\n        >\n          <InfoCard />\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExpenseTracker;\n","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Snackbar/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/List/List.jsx",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Form/Form.jsx",["91"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport Snackbar from \"../../Snackbar/Snackbar\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport useStyles from \"./styles\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst NewTransactionForm = () => {\n  const classes = useStyles();\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = React.useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\n      return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: \"Income\" });\n    } else if (\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\n    ) {\n      setFormData({ ...formData, type: \"Expense\" });\n    }\n\n    setOpen(true);\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((s) => {\n        const category = `${s.value.charAt(0)}${s.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (s.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: s.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category });\n            } else if (\n              expenseCategories.map((iC) => iC.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category });\n            }\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Snackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment ? (\n            <div className=\"segment\">\n              {segment.words.map((w) => w.value).join(\" \")}\n            </div>\n          ) : null}\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Date\"\n          type=\"date\"\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default NewTransactionForm;\n","/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/Form/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/constants/categories.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Main/List/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Details/Details.jsx",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/components/Details/styles.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/useTransactions.js",[],"/Users/getOffer/Repository/gitHub/myRepository/expensetracker/src/utils/formatDate.js",["92"],"export default (date) => {\n  const d = new Date(date);\n  let month = `${d.getMonth() + 1}`;\n  let day = `${d.getDate()}`;\n  const year = d.getFullYear();\n\n  if (month.length < 2) {\n    month = `0${month}`;\n  }\n  if (day.length < 2) {\n    day = `0${day}`;\n  }\n\n  return [year, month, day].join(\"-\");\n};\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"102","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":113,"column":6,"nodeType":"105","endLine":113,"endColumn":15,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":1,"nodeType":"109","endLine":15,"endColumn":3},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["112"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"115","text":"116"},[3138,3147],"[createTransaction, formData, segment]"]